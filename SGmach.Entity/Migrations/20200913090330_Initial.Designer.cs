// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGmach.Entity;

namespace SGmach.Entity.Migrations
{
    [DbContext(typeof(SuperGmachEntities))]
    [Migration("20200913090330_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("Dal1.Expenditure", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Receives")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Status1id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<string>("purpose")
                        .HasColumnType("TEXT");

                    b.Property<int?>("status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("way_of_payment")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Status1id");

                    b.ToTable("Expenditure");
                });

            modelBuilder.Entity("Dal1.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Status1id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("comments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("date_create")
                        .HasColumnType("TEXT");

                    b.Property<string>("fund_name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("required_months")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("required_vip")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Status1id");

                    b.ToTable("Fund");
                });

            modelBuilder.Entity("Dal1.Management_status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ManagementStatuses");
                });

            modelBuilder.Entity("Dal1.Status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Dal1.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Management_status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Management_status1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Manager_permissions")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Scoring")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status_reason")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("VIP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("account_number")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("bank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("bankName")
                        .HasColumnType("TEXT");

                    b.Property<string>("brunchName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ciling")
                        .HasColumnType("INTEGER");

                    b.Property<string>("city")
                        .HasColumnType("TEXT");

                    b.Property<int>("collection_date")
                        .HasColumnType("INTEGER");

                    b.Property<string>("email_addres")
                        .HasColumnType("TEXT");

                    b.Property<string>("father_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstName")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("frirnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_user")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("joining_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastname")
                        .HasColumnType("TEXT");

                    b.Property<int>("num_street")
                        .HasColumnType("INTEGER");

                    b.Property<string>("phon1")
                        .HasColumnType("TEXT");

                    b.Property<string>("phon2")
                        .HasColumnType("TEXT");

                    b.Property<string>("remarks")
                        .HasColumnType("TEXT");

                    b.Property<int?>("status_User")
                        .HasColumnType("INTEGER");

                    b.Property<string>("street")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Management_status1Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Dal1.User_in_fund", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("balance")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date_join")
                        .HasColumnType("TEXT");

                    b.Property<int>("fundID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("userID")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("fundID");

                    b.HasIndex("userID");

                    b.ToTable("UserInFunds");
                });

            modelBuilder.Entity("Dal1.withdrawing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("FundID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Status1id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("sStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Status1id");

                    b.ToTable("Withdrawing");
                });

            modelBuilder.Entity("Dal1.Expenditure", b =>
                {
                    b.HasOne("Dal1.Status", "Status1")
                        .WithMany("Expenditures")
                        .HasForeignKey("Status1id");
                });

            modelBuilder.Entity("Dal1.Fund", b =>
                {
                    b.HasOne("Dal1.Status", "Status1")
                        .WithMany("Funds")
                        .HasForeignKey("Status1id");
                });

            modelBuilder.Entity("Dal1.User", b =>
                {
                    b.HasOne("Dal1.Management_status", "Management_status1")
                        .WithMany("Users")
                        .HasForeignKey("Management_status1Id");
                });

            modelBuilder.Entity("Dal1.User_in_fund", b =>
                {
                    b.HasOne("Dal1.Fund", "Fund")
                        .WithMany("User_in_fund")
                        .HasForeignKey("fundID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dal1.User", "User")
                        .WithMany("User_in_fund")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dal1.withdrawing", b =>
                {
                    b.HasOne("Dal1.Status", "Status1")
                        .WithMany("withdrawings")
                        .HasForeignKey("Status1id");
                });
#pragma warning restore 612, 618
        }
    }
}
